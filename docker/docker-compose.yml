version: '3.10'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - ./mongod.conf:/etc/mongo/mongod.conf
    restart: unless-stopped
    env_file:
      - ../.env

  python-script:
    image: python:3.10  # Python 3.10 이미지 사용
    container_name: python-script-container
    depends_on:
      - mongodb
    volumes:
      - ./scripts:/scripts  # 스크립트 폴더가 매핑된 경로
    command: >
      bash -c "
      pip install pymongo;
      python3 /scripts/check_and_create_collection.py;
      echo 'Python 스크립트 실행 완료';"
    env_file:
      - ../.env

volumes:
  mongodb_data:


# 사용 방법:
# 1. .env 파일을 생성하여 필요한 환경 변수를 설정합니다.
# 2. 'docker-compose up -d' 명령어를 실행하여 MongoDB 컨테이너를 시작합니다.
# 2-1. 2개 컨테이너가 잘 실행되었다는 걸 확인한 후, docker logs python-script-container를 터미널에서 실행합니다.
# 3. vscode에서 mongodb익스텐션 설치
#  mongodb://eddi:eddi%40123@localhost:27017/lms_mongodb?authSource=admin 를 입력해서 접속합니다
# db접속과 컬렉션이 잘 생성되었는지 확인합니다